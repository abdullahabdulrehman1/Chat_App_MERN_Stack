import { createSlice } from "@reduxjs/toolkit";
import { adminLogin, adminLogout, getAdmin } from "../thunks/admin";
import toast from "react-hot-toast";
const initialState = {
  user: null,
  loader: true,
  isAdmin: false,
};
const authSlice = createSlice({
  name: "auth",
  initialState: initialState,
  reducers: {
    userExist: (state, action) => {
      state.user = action.payload;
      state.loader = false;
    },
    userNotExist: (state) => {
      state.user = null;
      state.loader = false;
    },
  },
  extraReducers: (builder) => {
    builder
      .addCase(adminLogin.pending, (state) => {
        // state.loading = true;
        state.error = null;
      })
      .addCase(adminLogin.fulfilled, (state, action) => {
        // state.loading = false;
        state.isAdmin = true;
        toast.success("Admin Login Successfully");
      })
      .addCase(adminLogin.rejected, (state, action) => {
        // state.loading = false;
        state.isAdmin = false;
        toast.error(action.payload || "An unknown error occurred");
      })
      .addCase(getAdmin.fulfilled, (state, action) => {
        if (action.payload) {
          state.isAdmin = true;
        } else {
          state.isAdmin = false;
        }
        // toast.success("Admin Login Successfully");
      })
      .addCase(getAdmin.pending, (state) => {
        // state.loading = true;
        state.error = null;
      })

      .addCase(getAdmin.rejected, (state, action) => {
        // state.loading = false;
        state.isAdmin = false;
        // toast.error(action.payload || "An unknown error occurred");
      })

      .addCase(adminLogout.fulfilled, (state, action) => {
        state.isAdmin = false;
        toast.success("Admin Logout Successfully");
      })
      .addCase(adminLogout.rejected, (state, action) => {
        state.isAdmin = false;
        toast.error(action.payload || "An unknown error occurred");
      });
  },
});
export default authSlice; // reducer
export const { userExist, userNotExist } = authSlice.actions; // actions
